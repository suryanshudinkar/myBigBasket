package big.basket.controller;

import java.io.IOException;
import java.net.http.HttpHeaders;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletResponse;

import org.springframework.http.HttpEntity;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.util.LinkedMultiValueMap;
import org.springframework.util.MultiValueMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.servlet.ModelAndView;

import big.basket.config.entity.User;
import big.basket.config.entity.Item;


@Controller
public class HomeController {

	RestTemplate template = new RestTemplate();
	@RequestMapping(value="/")
	public ModelAndView test(HttpServletResponse response) throws IOException{
		return new ModelAndView("home");
	}
	
	@RequestMapping(value = "/signup")
	public ModelAndView signup(HttpServletResponse response) throws IOException {
		return new ModelAndView("signup");
	}
	
	@PostMapping(value="/saveUser")
	public ModelAndView saveUser(@RequestParam String name, @RequestParam String username, @RequestParam String password) {
		
		String message = template.getForObject("http://localhost:8081/add?name="+name+"&username="+username+"&password="+password, String.class);
		System.out.println(message);
		return new ModelAndView("login");
	}
	
	@RequestMapping(value = "/login")
	public ModelAndView login(HttpServletResponse response) throws IOException {
		return new ModelAndView("login");
	}
	
	@PostMapping(value = "/authenticate")
	public ModelAndView authenticate(@RequestParam String username, @RequestParam String password) throws IOException{
		
		boolean success=template.getForObject("http://localhost:8081/authenticate?username="+username+"&password="+password, boolean.class); 
		
		if(success==true){
//			template.postForObject("http://localhost:8084/addLog", user.getId(), Integer.class);
			return new ModelAndView("loginsuccess");
		}
		else return new ModelAndView("login");	
	}
	
	@RequestMapping("/showCatalog")  
	public String viewemp(Model m){  
      List<Item> list=template.getForObject("http://localhost:8082/showCatalog", List.class);
//      System.out.println(list.get(0).getProductID());
      m.addAttribute("list",list);
      return "showCatalog";  
	} 
	
	@RequestMapping("/order")
	public String order(@PathVariable int id) {
		template.postForObject("http://localhost:8084/addOrder", id, Integer.class);		
		return "redirect:showCatalog";
	}
	
	@PostMapping("/calculateBill")	
	public ModelAndView calculateBill(@RequestParam String order, Model m) {
		System.out.println(order);
		String ord =template.getForObject("http://localhost:8083/addOrder?uid=1&order="+order, String.class);
		
		int n=order.length();
        List<Integer> idlist=new ArrayList<Integer>();
        String s="";
        for(int i=0;i<n;i++){
            char ch=order.charAt(i);
            if(ch==','){
                int x=Integer.parseInt(s);
                idlist.add(x);
                s="";
            }
            else{
                s+=ch;
            }
        }
        idlist.add(Integer.parseInt(s));
        System.out.println(idlist.size());
        List<Item> list = new ArrayList<Item>();
        n=idlist.size();
        for(int i=0;i<n;i++){

            Item item = template.getForObject("http://localhost:8082/" + "showCatalog/" + idlist.get(i), Item.class);
            System.out.println(item.getProductName());
            list.add(item);
        }
		
		int bill=template.getForObject("http://localhost:8083/totalBill/1", Integer.class);
		m.addAttribute("list", list);
		m.addAttribute("total", bill);
		return new ModelAndView("showBill");
	}
	
	@RequestMapping("/viewPrevousOrders")  
	public String viewPrevousOrders(Model m){  
      List<Item> list=template.getForObject("http://localhost:8084/viewPrevousOrders", List.class);
      m.addAttribute("list",list);
      return "viewPrevousOrders";  
	}
}
